# для профилирования программы job4j_tracker с реализацией хранилища в памяти использованы jps, jmap, jstat, jcosole
для анализа статистики создавались заявки 1000, 10000, для анализа показателей в jcosole - 100000 и 1000000, для состояния
выхода за пределы памяти - 1000000000
jps:
1) jps
45953 Jps
35063
45609 Launcher
45610 StartUI
получен pid

2) jmap:
jmap -histo 45610
получена статистика до и после создания заявок, после создания преобладают поля класса Item имя, дата

3) jstat:
получена статистика до и после создания заявок, видно поэтапное увеличение потребляемой памяти

4) jcosole:
после соединения наблюдалось, как показатели расходование памяти, количество тредов,
количество классов и использование процессорного времени реагируют на создание 100000, 1000000, 1000000000 заявок
при создании двух партий заявок по 100000 видно скачкообразное увеличение расходования памяти, количество тредов сначала
 не менялось, затем снизилось на 1 единицу, пики загрузки процессора на запуске, создании и удалении заявок,
 при создании 1000000 аналогичные показатели, по вкладке использования памяти приложением видна статистика о заполнении
 heap на уровне 12 процентов non-heap на уровне 20, при создании 1000000000 заявок отклик приостанавливается, затем
 приложение падает с ошибкой Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
 в это время jcosole показывает заполнение heap, после пикового заполнения, приложение останавливается, показатели
 обнулились




